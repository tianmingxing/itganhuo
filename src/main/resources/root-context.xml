<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	<!-- 读取resources.properties文件获得公共变量 -->
	<bean id="propertyConfigurer" class="cn.itganhuo.app.common.EncryptablePropertyPlaceholderConfigurer">  
		<constructor-arg name="key" value="362C1E982014B30D73DFCEAE0A" />
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:resources.properties</value>
			</list>
		</property>
    </bean>
	
	<!-- 自动扫描特定注解类并纳入容器管理 -->
	<context:component-scan base-package="cn.itganhuo.app.service">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository" />
	</context:component-scan>

    <!-- MarkDown解析 -->
    <bean id="pegDownProcessor" class="org.pegdown.PegDownProcessor" />
	
	<!-- 开启aop代理模式 -->
	<aop:aspectj-autoproxy />

	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="20" />
		<property name="initialSize" value="1" />
		<property name="maxWait" value="60000" />
		<property name="minIdle" value="1" />
		<property name="timeBetweenEvictionRunsMillis" value="3000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 1 FROM DUAL" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="filters" value="stat" />
	</bean>

	<!-- 开启注解型事务 -->
	<tx:annotation-driven transaction-manager="txManager" />
	
	<!-- 启用JDBC事务 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

	<!-- mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 批量为Model启用别名 -->
		<property name="typeAliasesPackage" value="cn.itganhuo.app.entity" />
		<!-- 指定 MyBatis 的 XML 映射器文件的位置 -->
		<property name="mapperLocations" value="classpath*:cn/itganhuo/app/mappers/*.xml" />
	</bean>
	
	<!-- 启用Mapper接口作为DAO的接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 批量为Mapper注册映射接口 -->
		<property name="basePackage" value="cn.itganhuo.app.dao" />
		<!--限制只有@Repository注解才会把它装配为mapper -->
		<property name="annotationClass" value="org.springframework.stereotype.Repository" />
	</bean>
	
	<!-- 导入其它关联配置文件 -->
	<import resource="spring-javamail.xml"/>
	<import resource="spring-shiro.xml"/>
	
</beans>
